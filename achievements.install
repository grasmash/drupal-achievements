<?php

/**
 * @file
 * Install, update, and uninstall functions for the Achievements module.
 */

/**
 * Implements hook_schema().
 */
function achievements_schema() {

  // this is the global leaderboard, but the user's rank site-wide could change
  // at any moment. because of this, rank isn't stored in the database table
  // (too many UPDATEs and logic to recreate) but, rather, in a Drupal cache.
  $schema['achievement_totals'] = array(
    'description' => 'A combined leaderboard of point totals across the entire site.',
    'fields' => array(
      'uid' => array(
        'default'       => 0,
        'description'   => 'The {users}.uid that is being ranked on the site-wide leaderboard.',
        'not null'      => TRUE,
        'type'          => 'int',
      ),
      'points' => array(
        'default'       => 0,
        'description'   => "The {users}.uid's combined achievement point total.",
        'not null'      => TRUE,
        'type'          => 'int',
      ),
      'timestamp' => array(
        'default'       => 0,
        'description'   => 'The Unix timestamp when the {users}.uid last received an achievement.',
        'not null'      => TRUE,
        'type'          => 'int',
      ),
    ),
    'indexes' => array(
      'points'          => array('points'),
      'timestamp'       => array('timestamp'),
    ),
    'primary key'       => array('uid'),
  );

  // this table not only defines what user has unlocked an achievement, but
  // also the rank for each particular unlock. since these ranks never
  // change, the rank is stored right in the table at unlock time.
  $schema['achievement_unlocks'] = array(
    'description' => 'Maps users to the achievements they have unlocked.',
    'fields' => array(
      'achievement_id'  => array(
        'default'       => '',
        'description'   => 'The ID of the achievement the {users}.uid has unlocked.',
        'length'        => 255,
        'not null'      => TRUE,
        'type'          => 'varchar',
      ),
      'rank' => array(
        'default'       => 0,
        'description'   => 'The ranking the {users}.uid earned for unlocking this achievement.',
        'not null'      => TRUE,
        'type'          => 'int',
      ),
      'uid' => array(
        'default'       => 0,
        'description'   => 'The {users}.uid that has unlocked the achievement.',
        'not null'      => TRUE,
        'type'          => 'int',
      ),
      'timestamp' => array(
        'default'       => 0,
        'description'   => 'The Unix timestamp when the {users}.uid last received an achievement.',
        'not null'      => TRUE,
        'type'          => 'int',
      ),
    ),
    'indexes' => array(
      'achievement_id'  => array('achievement_id'),
      'rank'            => array('rank'),
      'uid'             => array('uid'),
      'timestamp'       => array('timestamp'),
    ),
    'primary key'       => array('achievement_id', 'uid'),
  );

  // some achievements only trigger over time - after 10 comments, after 50
  // page views, etc. this is a simple table for storage of these counters.
  $schema['achievement_storage'] = array(
    'description' => 'Provides a general storage area for statistic collection.',
    'fields' => array(
      'achievement_id'  => array(
        'default'       => '',
        'description'   => 'An identifier for the achievement whose data is being collected.',
        'length'        => 255,
        'not null'      => TRUE,
        'type'          => 'varchar',
      ),
      'uid' => array(
        'default'       => 0,
        'description'   => 'The {users}.uid that the stored data relates to.',
        'not null'      => TRUE,
        'type'          => 'int',
      ),
      'data' => array(
        'description'   => 'A serialized string of the stored data.',
        'not null'      => TRUE,
        'size'          => 'big',
        'type'          => 'blob',
      ),
    ),
    'indexes' => array(
      'achievement_id'  => array('achievement_id'),
      'uid'             => array('uid'),
    ),
    'primary key'       => array('achievement_id', 'uid'),
  );

  return $schema;
}

